[notifications]
; there can be as many users or as few users as needed
; simply add or remove "email:" entries as necessary
email: user@example.com

[emailacct]
; login name for Delilah to log with to send email
username: reportingaccount@example.com
; password for the email account
password: youneedapassword
; email server and port
server: smtp.example.com:587
; the email address from which the notifications will arrive
from: reportingaccount@example.com

[honeypot]
; port number to listen for Elasticsearch requests on. Default is 9200
port: 9200
; the URI to access when pulling events from Delilah's monitoring database. This must match DelilahMonitor.ini value for the node
statusURI: thisshouldbelongandsecret
; name of the cluster you are simulating
clustername: clustername
; name of the instance that will be reporting the response e.g "es-node1"
instancename: instancename
; the version of Elasticsearch to report when asked
esversion: 1.4.1
; usually a string of random looking letters to is unique for identifying the node
nodename: nodename
; IP address of the external interface that is listening for the requests. This is reported by /_nodes
sensorIP: 192.168.1.1
; The buildnumber of the Elasticsearch instance. 7 to 8 digit hex number is best
buildnumber: 89d3341
; FQDN for the node
hostname: es-node1.example.com
; MAC address of the fake listening NIC. Probably best not to use your real MAC here
macaddress: 00:11:22:33:44:55
; Number of cores listening. Used by /_nodes
totalcores: 16
; Number of sockets available. Used by /_nodes
totalsockets: 32


[data]
; number of seconds to give a download event before failing
downloadtimeout: 30
; the SQLite database to store events in
dbFile: esevents.sqlite
